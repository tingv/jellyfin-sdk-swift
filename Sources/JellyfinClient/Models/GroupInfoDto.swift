//
// GroupInfoDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Class GroupInfoDto. */
public struct GroupInfoDto: Codable, Hashable {

    /** Gets the group identifier. */
    public var groupId: String?
    /** Gets the group name. */
    public var groupName: String?
    public var state: GroupStateType?
    /** Gets the participants. */
    public var participants: [String]?
    /** Gets the date when this DTO has been created. */
    public var lastUpdatedAt: Date?

    public init(groupId: String? = nil, groupName: String? = nil, state: GroupStateType? = nil, participants: [String]? = nil, lastUpdatedAt: Date? = nil) {
        self.groupId = groupId
        self.groupName = groupName
        self.state = state
        self.participants = participants
        self.lastUpdatedAt = lastUpdatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case groupId = "GroupId"
        case groupName = "GroupName"
        case state = "State"
        case participants = "Participants"
        case lastUpdatedAt = "LastUpdatedAt"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CodingKeys.self)
        try encoderContainer.encodeIfPresent(groupId, forKey: .groupId)
        try encoderContainer.encodeIfPresent(groupName, forKey: .groupName)
        try encoderContainer.encodeIfPresent(state, forKey: .state)
        try encoderContainer.encodeIfPresent(participants, forKey: .participants)
        try encoderContainer.encodeIfPresent(lastUpdatedAt, forKey: .lastUpdatedAt)
    }
}
