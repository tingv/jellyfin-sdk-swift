//
// ImageOption.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ImageOption: Codable, Hashable {

    public var type: ImageType?
    /** Gets or sets the limit. */
    public var limit: Int?
    /** Gets or sets the minimum width. */
    public var minWidth: Int?

    public init(type: ImageType? = nil, limit: Int? = nil, minWidth: Int? = nil) {
        self.type = type
        self.limit = limit
        self.minWidth = minWidth
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type = "Type"
        case limit = "Limit"
        case minWidth = "MinWidth"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CodingKeys.self)
        try encoderContainer.encodeIfPresent(type, forKey: .type)
        try encoderContainer.encodeIfPresent(limit, forKey: .limit)
        try encoderContainer.encodeIfPresent(minWidth, forKey: .minWidth)
    }
}
