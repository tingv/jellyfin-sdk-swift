//
// StartupConfigurationDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The startup configuration DTO. */
public struct StartupConfigurationDto: Codable, Hashable {

    /** Gets or sets UI language culture. */
    public var uICulture: String?
    /** Gets or sets the metadata country code. */
    public var metadataCountryCode: String?
    /** Gets or sets the preferred language for the metadata. */
    public var preferredMetadataLanguage: String?

    public init(uICulture: String? = nil, metadataCountryCode: String? = nil, preferredMetadataLanguage: String? = nil) {
        self.uICulture = uICulture
        self.metadataCountryCode = metadataCountryCode
        self.preferredMetadataLanguage = preferredMetadataLanguage
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case uICulture = "UICulture"
        case metadataCountryCode = "MetadataCountryCode"
        case preferredMetadataLanguage = "PreferredMetadataLanguage"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CodingKeys.self)
        try encoderContainer.encodeIfPresent(uICulture, forKey: .uICulture)
        try encoderContainer.encodeIfPresent(metadataCountryCode, forKey: .metadataCountryCode)
        try encoderContainer.encodeIfPresent(preferredMetadataLanguage, forKey: .preferredMetadataLanguage)
    }
}
